(deftheme custom_dark)

;; naysayer background: #062329
(let ((background     "#202020")
      (gutters        "#202020")
      (gutter-fg      "#202020")
      (gutters-active "#202020")
      (builtin        "#ffffff")
      (selection      "#0000ff")
      (text           "#d1b897")
      (comments       "#44b340")
      (punctuation    "#8cde94")
      (keywords       "#ffffff")
      (variables      "#c1d1e3")
      (functions      "#ffffff")
      (methods        "#c1d1e3")
      (strings        "#2ec09c")
      (constants      "#7ad0c6")
      (macros         "#8cde94")
      (numbers        "#7ad0c6")
      (white          "#ffffff")
      (error          "#ff0000")
      (warning        "#ffaa00")
      (highlight-line "#0b3335")
      (line-fg        "#126367"))

  (custom-theme-set-faces
   'custom_dark
   `(default                          ((t (:foreground ,text :background ,background, :weight normal))))
   `(region                           ((t (:foreground nil :background ,selection))))
   `(cursor                           ((t (:background ,white))))
   `(fringe                           ((t (:background ,background   :foreground ,white))))
   `(linum                            ((t (:background ,background :foreground ,gutter-fg))))
   `(highlight ((t (:foreground nil :background ,selection))))

   `(font-lock-keyword-face           ((t (:foreground ,keywords))))
   `(font-lock-type-face              ((t (:foreground ,punctuation))))
   `(font-lock-constant-face          ((t (:foreground ,constants))))
   `(font-lock-variable-name-face     ((t (:foreground ,variables))))
   `(font-lock-builtin-face           ((t (:foreground ,builtin))))
   `(font-lock-string-face            ((t (:foreground ,strings))))
   `(font-lock-comment-face           ((t (:foreground ,comments))))
   `(font-lock-comment-delimiter-face ((t (:foreground ,comments))))
   `(font-lock-doc-face               ((t (:foreground ,comments))))
   `(font-lock-function-name-face     ((t (:foreground ,functions))))
   `(font-lock-doc-string-face        ((t (:foreground ,strings))))
   `(font-lock-preprocessor-face      ((t (:foreground ,macros))))
   `(font-lock-warning-face           ((t (:foreground ,warning))))
  )
)

;;;###autoload
(when (and (boundp 'custom-theme-load-path) load-file-name)
  (add-to-list 'custom-theme-load-path
               (file-name-as-directory (file-name-directory load-file-name))))

(provide-theme 'custom_dark)
(provide 'custom_dark-theme)
